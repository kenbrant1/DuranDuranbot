//song has to be made first - all patterns, sequences

//create bassline first... slow and steady.... the BASE line... ;)
//then TAKE that bass line, and fit notes WITHIN IT.... to add.... ONCE at a time....
//make bass line... with time as well... first....

// everything modular... everything has to fit within a time signature... and within parts of it... parts of modules.

//(bass can either stutter... not stutter.... or lengthen)

// make bass notes otave or something down

// Use FIRST generated bass line for every other generated pattern. Use it in creative ways, but stick with THAT ONE to meake sense.

// Find a way to take any group of notes, and make it sound good.

//... maybe.... take a random treble pattern with random times, and create a bass pattern off that with a 100% steady beat. Maybe steady note pattern too.

// make smaller arrays of treble notes (of 4, 8 notes), and sequence those smaller arrays one after the other... and under each specific small treble
//array, make a bass array with same set of notes, but mixed up. Keep times or not.

//.. or.. make one small treble arrray... of 4,  notes or something... and play that one array over and over, but mix and match thosen notes...
// ... maybe do same with a bass line... use same notes... maybe use different array.... also... then maybe change it up *a bit* after 4 or 8 bars or something..
//... do same with times throughout.

// again... figure out how to make randomness sound good.

// we are making COMPUTER MUSIC ;)... Not human music on a computer :)

//UTILIZE/EMBRACE COMPUTER RANDOMNESS :)... make it sound good.

// use all 3 "inspirational" randomseed numbers at each step of generation of piece. So use all 3 randomseed numbers for notes... then times... then pbinds, etc.
//... to enhance radomization.... Do this maybe.... Or maybe just for notes, times, etc... but not for pbinds. Not sure. Although it sounds
// like good idea for pbinds.... Actually, maybe not.

// Allow the computer to tell a story via it's compter logic.

// Music invokes something within us... in a specfic way by what was being channled when is was written. Think of DD song - "Before the Rain"

// PROVIDE COMPUTER TECHNIQUE FOR COMPOSITION OF IT'S OWN MUSIC. ALLOW IT TO EXPRESS ITSELF. RANDOMNESS COMES FIRST.... THEN TECHNIQUE. RANDOMNESS
// NEEDS TO BE CHANNELED. RANDOMNESS NEEDS TO BE LED.

// CREATE MEANING

// John Taylor says, "Find a way to tell a story, not cut up four bar loops/etc."
// I think bass should be primary "story-teller"..!!!!!!!!!!!!

// Use things like INVERSION of progrssions.... and other types of manipulations of arrays - https://en.wikipedia.org/wiki/Inversion_(music)

// not sure - https://en.wikipedia.org/wiki/Motif_(music)
// https://en.wikipedia.org/wiki/Phrase_(music)
// https://en.wikipedia.org/wiki/Melodic_motion
// https://en.wikipedia.org/wiki/Tension_(music)
// ^^Not usre about that stuff

// Song has to mean something... everything is connected.... God inspires everything.... nothing is truly random....
//........ song has to mean something........

// Get God into the computer.

// Twin Flames - Bass/treble... dual.... treble reacting to bass..... and then you have multiple pairs of twin flames.

// ORRR... make it like the band Duran Duran.... but have a twin flame interaction *going on*.... and that interation only somehow produces *one note*...
//.... and then you do that for each member of Duran Duran.....  and somehow develop an interaction between each band member.

// Make the dual bass/treble like a twin flame relationship. Male/Female Twin Flame.


// Make total of 6 notes being played...... 2 for each band member, Nick, John, Simon...... I guess add in beat for Rodger maybe at later date....
// ... and maybe guitar at later date..... but right now just 3 memebers....

// All band members work out what notes are played.....

// Possibility - have the whole band thing.... and have equal and opposite dual notes for each band member. I guess dim 5th being equal and opposite.
// Example: John would play bass part... accompanying dim 5th higher.... also possibly make the dim 5th higher part lower in volume.

// or not.... maybe find a way to use the equal and opposite in a different way..... like how a note is generated.

//CORRECTION - dim 5th may not be "equal and opposite". Find out what is "equal and opposite", and how that would be applied.

// Way for band member interaction - Someone creates note... the someone else does.... then someone else.... Example: Nick creates note, then
// John bases his not off Nick's... then Simon off John's.... AND THEN Nick bases off Simon..... in a circle. Can intailly start with anyone.

// Nick would work in chords (or not - can depend) and multiple parts.... John and Simon 1 note.... Simon can have harmonies

// DO NOT MAKE IT WHERE EACH MEMBER WORKS OFF JUST ONE MEMBER. DO IT LIKE CIRCLE. You can add rests and stuff to give parts identity.
// Each member works off of each other note by note, bit by bit. In a circle.

//^^^This is the way to do it.

// Find out way to base a new note off of last note.... Perhaps randomly.... using a set of possible ratios....

// Figure out way to develop durations for notes..... I would see it more as choosing to continue on, rest, or change. Again, with CIRCULAR COMPOSITION.

// Use this circular composition in parts. Like how a piece of music is.

// Possibly find ways to add characteristics to each band member... But they already have characterics in bass, treble, chords, etc.

// Perhaps randomize this "circular composition". So John then Simon then Nick... then Simon... then Nick... then John. Perhaps partial randomization.

// THINK ABOUT FINDING WAYS TO INCORPORATE TWIN FLAMES FOR EACH MEMBER. IN HOW THEY GENERATE THEIR NOTES. EQUAL AND OPPOSITE.
// I would say this could have to do with how a note is generated from the last note.

//John - bass, single note.
//Simon - high, single note and chord/harmonies.
//Nick - high and low, single and chord/harmonies.

//^^really just like how they do it.

// Incorporate a time/duration system for "bits".

// I would say that a bit is a certian precise and exact ... defined.... size. A bit might be 0.1 or 0.2 seconds long or something.
// Or a bit would be the shortest note duration in the song.

// Use names of band members numerology values to cycle the circular composition. With their twin flame counter part subtracting value from it...
//.... as to manipulate the weights in the choosing of their bits.

// Do not need time signature. Just use bit system.

// Use names of band member's numerology numbers for a random seed. Combine all numbers. Randomize how numbers are combined using another random seed.
// make default names Duran Duran.

//Have program get inspiration from itself... i.e. it's own code, framework, archetecture.

// also... figure out way to allow human user to input "inspiration"... be it words, passages, or any other kind of meaningful information...
//... just like teaching a child new things... inspiring it.... reading it books, or teaching it things

// figure out way to get program to write it's own code to save the information input into it... and how it goes about that. And how it utlizes that info
//as inspiration.

// find way to implement dna into composition

// make instrumentalist base new bit on both previous instrumentalists, not just the last one.



// MAKE COMPOSITION LIKE *************************CLOCK WORK************************........... Like your WATCH!!!!!!!!!!....... MAKE IT
// MATHEMATICAL!!!!!!!!!!!!!!!

//..... Like a clock... or watch...... make it conscious.


// July 13 2019

// Make "estachon".... like.... reach a conclusion in piece.... make it a story.... potentially utilize "other half" to do this....

// maybe include way to delete some saved random seeds... or delete some automatically.

// other ways to make sound better.......
// - "direct dd'bot" by going further into machine learning into it.....
// - neural net too
// - in other words.... keep basic algorithmic design you have now, and make it sound better using neural net/machine learning type things; find
//ways to direct sound......... sculp it.
// - defintely do estachon thing
// - and I guess improve upon algorithm if needed


// develop algorithm to generate piece of music by always ever-changing.... while always staying true to yourself. Think of "anger is an energy song" and
//john taylor saying that


// Give DD bot the ability to "jump" to conclusions (partly based on logic), rather than "walk"... contrast Watson logic type with
// DDbot creative type. So... Be creative with what DDbot learns... Do many things with as little as possible.
// One-shot deep learning combined with long term deep learning... Not *find* answer, but *create* solution.
// DDbot perform "mental gymnastics".
// create solution not already discovered, based on information learned. Again, "jump" to conclusions. "Mental gymnastics".

// : l... CREATE A SONG - A SONG BEING THE PROCESS OF FINDING A SOLUTION. : l .... THHHHHIIIIIIIISSSSSSSSSSSS!!!!!!!!!!!!!!
// ^^^^^^^^TTTTTTTTHHHHHHHHHHHIIIIIIIIIIISSSSSSSSSSSSSSS!!!!!!!!!!!!!!!!!!!!!!!!!!

// CREATE A PROBLEM.......... FIGURE OUT A SOLUTION.

// A SONG GUIDES YOU THROUGH THAT. IT IS THE PROCESS OF FINDING THE SOLUTION.

// A SONG SHOWS YOU ***HOW*** TO DO SOMETHING. Music shows you how to be.
// that should also deal with "estachon" thing


// build neural net, interates through 64 (or more) layers....each layer having wieghts for which interval to choose for each instrument. Use
// time of playing song to dtermine weights, like other weights.


// or use same method now, but create set of weight arrays for each instrument... weight array for what interval to add on to it's last note
// based on each interval between last two other intruments.


// Develop a quicker way to help DDbot learn. Like add a 5 star rating system on top of the time-based rating system... stars multiply
// time-based rating

// develop a faster way of generating a new piece using new random seeds. One-click

// make DNA machine learning process different. set of weights for each DNA spot.

//write "how to use" file... saing to train it, etc


//..... for dna machine learning changes....

//...... create dna sets for each player, each player having a set of 64 arrays of weights, which the player cycles through,
// .......for the whole piece, choosing 1-9 dna index, each player has own "thread", and cycles through own set of dna arrays
//........ players do NOT follow the same DNA thread... they each have their own. Each run in parallel. But all follow
// "bit track".

(~number_of_instruments-1).do(x = 1; {("instrument_"++(x=x+1)++"_~dna_clock").asSymbol.envirGet.value;});
~dna_clock = ~dna_clock + 1;

~instrument_1_array_starting_func.value;
(~number_of_instruments-1).do(x = 1; {("instrument_"++(x=x+1)++"_array_func").asSymbol.envirGet.value;});

if(~dna_clock == ~dna_index_choice.asInteger, {~dna_clock = 0; ~dna_index_choice = ~dna_index_choice_func.value;});


// or rather (choose this one)... have no set DNA, and each player chooses length of "decision wait time" based on
// the wait times of others players. Get rid of DNA system entirely. Get rdi of 1/3 randomness too. Make all machine learning.
// Actually, I think keep 1/3 randomness.



// give ddbot ability to REASON... Give use abilty to rate moments of a piece in real time. PARSE these moments into things like..
// kinds of trasition intervals... harmonies... duration.... and somehow combine all of these preferred elements in piece creation
// using the data learned.

// also things like... how many intervals/harmonic intervals are used in a certain time period, and in what order...

// ... have ddbot learn rules... reason... learn rules for composing a piece using neural nets/weight net... each succession
// of weights (array) is a note... or a period in between trasitions... and ddbot learns pattern/progression "tendencies" by
// way of neural/weight net(s).(and maybe have several "neural nets" used in combination with each other)
// perhaps one large neural net... and ddbot learns tendencies at different parts of the net based on location
// in piece it learned from.

// create way(s) to select section of piece to rate. slide bar. and/or manual integer clock selection.

// Tie each "player" learned rules with each other "player".... harmonies, patterns/progressions, etc... somehow...

// Make ONE giant neural net.

// intergrate EVERY ELEMENT OF A PIECE OF MUSIC.

// Elements -
// - interval between last note
// - harmonic intervals
// - lengnth of last note
// - lengths of harminic (possibly)
// -

//refined elements -
// - interval between last note of last player, and last note of current player
// - note durations of last note of current player, and perhaps of last player too
// - position of section in neural net

// make large neural net as one large peice of music

// find new ntoe duration based on the avg of ALL player's current notes. By number of bits between trasition decision.
// if avg dur of all notes is ... < 5 bits, < 10 bits, < 20 bits, > 30 ... weights - SCRATCH THAT... do by seconds

// 4 documants for each player... 1 for each avg duration length.


// final -
// - make onyl 3 players.
// - make 1 weight array for each interval between a player... and each other player. ex- [1, 1] [1, 2].. so on... [2, 1] [2, 2].. so on.12*12=144
// 144 weighted arrays
// - 144 arrays for each combination note durations .... IN SECONDS, NOT BITS. calculate seconds using num of bits and bit freq.
// <= 0.5 secs, > 0.5 and <= 2 secs, > 2 secs
// dur combos - 1,1,1, 1,1,2, 1,1,3 .... (9*3)
// so 27 dur combos of 144 arrays for each combo of note durs. 27*144

//.... or maybe for EVERY COMBO (I think what I wrote before is everyo combo)

// test it it works by soing postln for which document it edits. 1 weight array per document.

// combine BOTH chord preferences (choosing a note based on combo of other notes) AND neural net track (each new decision is guided
// learned neural net track for each player). USE BOTH. Perhaps 50/50. Neural net tracks guides piece foward, while chord
// preferences maintain harmony.


// or... :P.... just do both harmony and time machine learning... seperately... no neural nets... no track

// ^^^... and doesn't matter who is playing what during note choice.